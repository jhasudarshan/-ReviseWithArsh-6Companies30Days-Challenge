class Solution {
public:
    bool check(int idx,string& s,vector<string>& wordDict,vector<int>& dp)
    {
        if(idx == s.size())
            return true;
        if(dp[idx] != -1)
            return dp[idx];
        
        for(int i = idx;i<s.size();i++)
        {
            string str = s.substr(idx, i - idx + 1);
            if(find(wordDict.begin(),wordDict.end(),str) != wordDict.end())
            {
                if(check(i+1,s,wordDict,dp))
                {
                    dp[idx] = true;
                    return dp[idx];
                }
            }
        }

        dp[idx] = false;
        return dp[idx];
    }
    bool wordBreak(string s, vector<string>& wordDict) {
        int n = s.size();
        vector<int>dp(n,-1);
        return check(0,s,wordDict,dp);
    }
};

class Solution {
public:
    int solve(string &s, int idx,unordered_set<string>& st,vector<int>& t) {
        if (idx >= s.length())  
            return 0;
        if(t[idx] != -1) 
            return t[idx];
        string currStr = "";
        int minExtra = s.length();  
        for (int i = idx; i < s.size(); i++) {
            currStr.push_back(s[i]);

            int currExtra = (st.find(currStr) == st.end()) ? currStr.length() : 0;
            int nextExtra = solve(s, i + 1,st,t);
            int totalExtra = currExtra + nextExtra;
            minExtra = min(minExtra, totalExtra); 
        }
        return  t[idx] =minExtra;
    }
    
    int minExtraChar(string s, vector<string>& dictionary) {
        vector<int>t(51,-1);
        unordered_set<string> st;
        for(string &word : dictionary) {
            st.insert(word);
        }
        return solve(s, 0,st,t);
    }
};

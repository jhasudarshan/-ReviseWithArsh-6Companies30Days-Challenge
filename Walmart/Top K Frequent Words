class Solution {
public:
    struct cmp {
        bool operator()(pair<int, string> x, pair<int, string> y) {
            if (x.first == y.first) {
                return x.second > y.second;
            } else {
                return x.first < y.first;
            }
        }
    };
    vector<string> topKFrequent(vector<string>& words, int k) {
        map<string,int>mp;
        for(auto str : words)
        {
            mp[str]++;
        }

        priority_queue<pair<int, string>, vector<pair<int, string>>, cmp> pq;
        for(auto it : mp)
        {
            pq.push({it.second,it.first});
        }


        vector<string>ans;
        while(k--)
        {
            auto it = pq.top();
            ans.push_back(it.second);
            pq.pop();
        }

        return ans;
    }
};
